// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  bio           String?
  website       String?
  twitter       String?
  linkedin      String?

  movies        Movie[]
  reviews       Review[]
}

model Movie {
  id           Int      @id @default(autoincrement())
  title        String
  description  String
  posterUrl    String?
  year         Int
  duration     String
  imdbRating   Float
  genres       String   // Stored as a JSON string
  status       String   @default("PUBLISHED") // e.g., PUBLISHED, DRAFT, PENDING_DELETION
  viewCount    Int      @default(0)
  likes        Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  authorId     String
  author       User     @relation(fields: [authorId], references: [id])

  reviews      Review[]
  subtitles    Subtitle[]
}

model Review {
  id        Int      @id @default(autoincrement())
  movieId   Int
  movie     Movie    @relation(fields: [movieId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  rating    Int
  comment   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Subtitle {
  id             Int      @id @default(autoincrecment())
  movieId        Int
  movie          Movie    @relation(fields: [movieId], references: [id])
  language       String
  url            String
  uploaderName   String
  downloadCount  Int      @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
